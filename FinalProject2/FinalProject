# Kiran Pillai
# 1780014


import csv
from datetime import datetime


class OutputInventory:
    def __init__(self, item_list):
        self.item_list = item_list

    def full(self):
        with open('FullInventory.csv', 'w') as file:
            items = self.item_list
            keys = sorted(items.keys(), key=lambda x: items[x]['manufacturer'])
            for item in keys:
                item_id = item
                manufacturer_name = items[item]['manufacturer']
                item_type = items[item]['item_type']
                price = items[item]['price']
                service_date = items[item]['service_date']
                damaged = items[item]['damaged']
                file.write(
                    '{},{},{},{},{},{}\n'.format(item_id, manufacturer_name, item_type, price, service_date, damaged))

    def by_type(self):
        items = self.item_list
        item_types = []
        keys = sorted(items.keys())
        for item in items:
            item_type = items[item]['item_type']
            if item_type not in item_types:
                item_types.append(item_type)
        for type in item_types:
            file_name = type.capitalize() + 'Inventory.csv'
            with open(file_name, 'w') as file:
                for item in keys:
                    item_id = item
                    manufacturer_name = items[item]['manufacturer']
                    price = items[item]['price']
                    service_date = items[item]['service_date']
                    damaged = items[item]['damaged']
                    item_type = items[item]['item_type']
                    if type == item_type:
                        file.write('{},{},{},{},{}\n'.format(item_id, manufacturer_name, price, service_date, damaged))

    def past_service(self):
        items = self.item_list
        keys = sorted(items.keys(), key=lambda x: datetime.strptime(items[x]['service_date'], "%m/%d/%Y").date(),
                      reverse=True)
        with open('PastServiceDateInventory.csv', 'w') as file:
            for item in keys:
                item_id = item
                manufacturer_name = items[item]['manufacturer']
                item_type = items[item]['item_type']
                price = items[item]['price']
                service_date = items[item]['service_date']
                damaged = items[item]['damaged']
                today = datetime.now().date()
                service_expiration = datetime.strptime(service_date, "%m/%d/%Y").date()
                expired = service_expiration < today
                if expired:
                    file.write('{},{},{},{},{},{}\n'.format(item_id, manufacturer_name, item_type, price, service_date,
                                                            damaged))

    def damaged(self):
        items = self.item_list
        keys = sorted(items.keys(), key=lambda x: items[x]['price'], reverse=True)
        with open('DamagedInventory.csv', 'w') as file:
            for item in keys:
                item_id = item
                manufacturer_name = items[item]['manufacturer']
                item_type = items[item]['item_type']
                price = items[item]['price']
                service_date = items[item]['service_date']
                damaged = items[item]['damaged']
                if damaged:
                    file.write('{},{},{},{},{}\n'.format(item_id, manufacturer_name, item_type, price, service_date))


if __name__ == '__main__':
    items = {}
    files = ['ManufacturerList.csv', 'PriceList.csv', 'ServiceDatesList.csv']
    for file in files:
        with open(file, 'r') as csv_file:
            csv_reader = csv.reader(csv_file, delimiter=',')
            for line in csv_reader:
                item_id = line[0]
                if file == files[0]:
                    items[item_id] = {}
                    manufacturer_name = line[1]
                    item_type = line[2]
                    damaged = line[3]
                    items[item_id]['manufacturer'] = manufacturer_name.strip()
                    items[item_id]['item_type'] = item_type.strip()
                    items[item_id]['damaged'] = damaged
                elif file == files[1]:
                    price = line[1]
                    items[item_id]['price'] = price
                elif file == files[2]:
                    service_date = line[1]
                    items[item_id]['service_date'] = service_date

    item_types = []
    manufacturers = []
    for item in items:
        manufacturer = items[item]['manufacturer']
        item_type = items[item]['item_type']
        if manufacturer not in item_types:
            manufacturers.append(manufacturer)
        if item_type not in item_types:
            item_types.append(item_type)

    input1 = None
    while input1 != 'q':
        input1 = input("\nEnter item manufacturer and item type or q to quit: ")
        if input1 == 'q':
            break
        else:
            input_manufacturer = None
            input_type = None
            input1 = input1.split()
            invalid_input = False
            for word in input1:
                if word in manufacturers:
                    if input_manufacturer:
                        invalid_input = True
                    else:
                        input_manufacturer = word
                elif word in item_types:
                    if input_type:
                        invalid_input = True
                    else:
                        input_type = word
            if not input_manufacturer or not input_type or invalid_input:
                print("\nNo such item in inventory")
            else:
                keys = sorted(items.keys(), key=lambda x: items[x]['price'], reverse=True)
                same_items = []
                similar_items = {}
                for item in keys:
                    if items[item]['item_type'] == input_type:
                        date = datetime.now().date()
                        service_date = items[item]['service_date']
                        service_expiration = datetime.strptime(service_date, "%m/%d/%Y").date()
                        expired = service_expiration < date
                        if items[item]['manufacturer'] == input_manufacturer:
                            if not expired and not items[item]['damaged']:
                                same_items.append((item, items[item]))
                        else:
                            if not expired and not items[item]['damaged']:
                                similar_items[item] = items[item]
                if same_items:
                    item = same_items[0]
                    item_id = item[0]
                    manufacturers_name = item[1]['manufacturer']
                    item_type = item[1]['item_type']
                    price = item[1]['price']
                    print("\nYour item is: Item ID:{}, Manufacturer:{}, Item Type:{}, Item Price:${}"
                          .format(item_id, manufacturers_name, item_type, price))
                    if similar_items:
                        closest_price = price
                        closest_item = None
                        closest_price_diff = None
                        for item in similar_items:
                            if closest_price_diff is None:
                                closest_item = similar_items[item]
                                closest_price_diff = abs(int(closest_price) - int(similar_items[item]['price']))
                                item_id = item
                                manufacturers_name = similar_items[item]['manufacturer']
                                item_type = similar_items[item]['item_type']
                                price = similar_items[item]['price']
                                continue
                            price_diff = abs(int(closest_price) - int(similar_items[item]['price']))
                            if price_diff < closest_price_diff:
                                closest_item = item
                                closest_price_diff = price_diff
                                item_id = item
                                manufacturers_name = similar_items[item]['manufacturer']
                                item_type = similar_items[item]['item_type']
                                price = similar_items[item]['price']
                        print("\nItems you may also consider: Item ID:{}, Manufacturer:{}, Item Type:{}, Item Price:${}"
                              .format(item_id, manufacturers_name, item_type, price))
